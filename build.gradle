plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // ⭐ Querydsl 플러그인 사용 X
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'  // Hibernate 6.0.2 이상
	implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.1.Final'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'  // Hibernate Validator 추가
	implementation 'org.glassfish:jakarta.el:4.0.2'  // EL API 추가
	implementation 'mysql:mysql-connector-java:8.0.33'  // MySQL 드라이버 추가

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'


	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'


	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/generated']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}

clean {
	file(querydslDir).deleteDir()
}
//
//def generated = "$src/main/generated"
//
//querydsl {
//	jpa = true
//	querydslSourcesDir = generated
//}
//sourceSets {
//	main.java.srcDir generated
//}
//
//compileQuerydsl{
//	options.annotationProcessorPath = configurations.querydsl
//}
//
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}
//
//clean {
//	delete file(generated)
//}


//겨우 찾은 설정, 플러그인 하나 빼야함
//https://velog.io/@juhyeon1114/Spring-QueryDsl-gradle-%EC%84%A4%EC%A0%95-Spring-boot-3.0-%EC%9D%B4%EC%83%81